<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
      Example SakaiProxy bean - only include the services you're actually using.
      If you don’t need to interact with these services (e.g., SecurityService, SessionManager),
      remove the corresponding properties below.
    -->
    <bean id="org.sakaiproject.rollcall.logic.SakaiProxy"
          class="org.sakaiproject.rollcall.logic.SakaiProxyImpl"
          init-method="init">

        <!-- If you need to call Sakai security checks, keep SecurityService -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <!-- If your servlet or logic needs session data, keep SessionManager -->
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <!-- If you need to look up the current tool or site, keep ToolManager -->
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <!-- Etc. Remove anything you don't need. -->
    </bean>

    <!--
      Example logic bean (the “heart” of your tool).
      It references SakaiProxy so it can call Sakai APIs.
      If you don’t need any advanced logic, you could remove this
      and directly use the SakaiProxy from your servlet—though that’s not typical.
    -->
    <bean id="org.sakaiproject.rollcall.logic.RollcallLogic"
          class="org.sakaiproject.rollcall.logic.RollcallLogicImpl"
          init-method="init">

        <property name="sakaiProxy" ref="org.sakaiproject.rollcall.logic.SakaiProxy" />
        <!-- Add any other dependencies your logic layer needs. -->
    </bean>

    <!--
      (Optional) DAO Bean
      If your tool needs database access, you’d define a DAO and
      inject the Sakai sessionFactory + transaction manager here.
      Remove entirely if you’re not interacting with the DB.
    -->
    <!--
    <bean id="org.sakaiproject.rollcall.dao.RollcallDaoTarget"
          class="org.sakaiproject.rollcall.dao.impl.RollcallDaoImpl"
          init-method="init">
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
    </bean>

    <bean id="org.sakaiproject.rollcall.dao.RollcallDao"
          class="org.sakaiproject.genericdao.springutil.CurrentClassLoaderTxProxyFactoryBean">
        <property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
        <property name="target" ref="org.sakaiproject.rollcall.dao.RollcallDaoTarget" />
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    -->

</beans>
