<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!--  SakaiProxy -->
 	<bean id="org.sakaiproject.rollcall.logic.SakaiProxy"
    	class="org.sakaiproject.rollcall.logic.SakaiProxyImpl"
        init-method="init">
        
        <!-- API injection -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
		
	</bean>
	
	<!-- ProjectLogic -->
	<bean id="org.sakaiproject.rollcall.logic.ProjectLogic"
    	class="org.sakaiproject.rollcall.logic.ProjectLogicImpl"
    	init-method="init">
    	
    	<property name="dao" ref="org.sakaiproject.rollcall.dao.ProjectDao" />	
    	<property name="cache" ref="org.sakaiproject.rollcall.cache" />	
    	
    </bean>

	<!-- SqlService -->
	<bean id="org.sakaiproject.rollcall.logic.SqlServiceProxy"
		  class="org.sakaiproject.rollcall.logic.SqlServiceProxyImpl"
		  init-method="init">
		<property name="sqlService" ref="org.sakaiproject.db.api.SqlService" />
		<property name="dao" ref="org.sakaiproject.rollcall.dao.RollcallDao" />
		<property name="cache" ref="org.sakaiproject.rollcall.cache" />
	</bean>
    
    <!-- DAO. This uses the DataSource that has already been setup by Sakai  -->
	<bean id="org.sakaiproject.rollcall.dao.ProjectDao"
		class="org.sakaiproject.rollcall.dao.impl.ProjectDaoImpl"
		init-method="init">
		<property name="jdbcTemplate">
			<bean class="org.springframework.jdbc.core.JdbcTemplate">
				<constructor-arg type="javax.sql.DataSource">
					<ref bean="javax.sql.DataSource" />
				</constructor-arg>
			</bean>
		</property>	
	</bean>

	<bean id="org.sakaiproject.rollcall.dao.RollcallDao"
		  class="org.sakaiproject.rollcall.dao.impl.RollcallDaoImpl"
		  init-method="init">
		<property name="jdbcTemplate">
			<bean class="org.springframework.jdbc.core.JdbcTemplate">
				<constructor-arg type="javax.sql.DataSource">
					<ref bean="javax.sql.DataSource" />
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<!-- Cache: ttl=1 hour -->
    <bean id="org.sakaiproject.rollcall.cache"
        class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref bean="org.sakaiproject.memory.api.MemoryService.cacheManager"/>
        </property>
        <property name="cacheName">
            <value>org.sakaiproject.rollcall.cache</value>
        </property>
        <property name="maxElementsInMemory" value="1000" />
        <property name="diskPersistent" value="false" />
        <property name="eternal" value="false" />
        <property name="timeToLive" value="3600" />
        <property name="timeToIdle" value="3600" />
    </bean>

	<bean id="org.sakaiproject.rollcall.bbb.BBBMeetingProxy"
		  class="org.sakaiproject.rollcall.bbb.BBBMeetingProxyImpl"
		  init-method="init">

		<property name="bbbMeetingManager" ref="org.sakaiproject.bbb.api.BBBMeetingManager" />
		<property name="bbbApi" ref="org.sakaiproject.bbb.api.BBBAPI" />
	</bean>



</beans>
